{
  "_args": [
    [
      "boxpack@0.1.0",
      "/Users/gxx/Documents/workspace/cleartime/public/admin/node_modules/css-spritesmith/node_modules/layout"
    ]
  ],
  "_from": "boxpack@0.1.0",
  "_id": "boxpack@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/boxpack",
  "_phantomChildren": {},
  "_requested": {
    "name": "boxpack",
    "raw": "boxpack@0.1.0",
    "rawSpec": "0.1.0",
    "scope": null,
    "spec": "0.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/css-spritesmith/layout"
  ],
  "_resolved": "https://registry.npmjs.org/boxpack/-/boxpack-0.1.0.tgz",
  "_shasum": "080734832eab86cd9ee8260d2171a5145d072d18",
  "_shrinkwrap": null,
  "_spec": "boxpack@0.1.0",
  "_where": "/Users/gxx/Documents/workspace/cleartime/public/admin/node_modules/css-spritesmith/node_modules/layout",
  "author": {
    "name": "Ryan Munro"
  },
  "bugs": {
    "url": "https://github.com/munro/boxpack/issues"
  },
  "dependencies": {},
  "description": "Bin packing algorithm for rectangles",
  "devDependencies": {
    "tap": "~0.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "080734832eab86cd9ee8260d2171a5145d072d18",
    "tarball": "https://registry.npmjs.org/boxpack/-/boxpack-0.1.0.tgz"
  },
  "homepage": "https://github.com/munro/boxpack#readme",
  "keywords": [
    "bin",
    "box",
    "pack",
    "rect"
  ],
  "license": "BSD",
  "main": "boxpack.js",
  "maintainers": [
    {
      "name": "munro",
      "email": "munro.github@gmail.com"
    }
  ],
  "name": "boxpack",
  "optionalDependencies": {},
  "readme": "# Boxpackâ€”Bin packing algorithm! [![Build Status](https://secure.travis-ci.org/munro/boxpack.png?branch=master)](http://travis-ci.org/munro/boxpack)\n\nBin packing algorithm!\n\n## Example\n\n```javascript\nvar bin = boxpack();\n\nvar boxes = bin.pack([\n    {width: 50, height: 100},\n    {width: 75, height: 75},\n    {width: 25, height: 25},\n    {width: 100, height: 100}\n]);\n\ndocument.getElementById('result').innerHTML = boxes.map(function (box) {\n    return '<div style=\"' +\n        'position:absolute;' +\n        'border:1px solid black;' +\n        'left:' + box.x + 'px;' +\n        'top:' + box.y + 'px;' +\n        /* subtract border from width & height */\n        'width:' + (box.width - 2) + 'px;' +\n        'height:' + (box.height - 2) + 'px\"></div>';\n}).join('');\n```\n\n## Data structures\n\n### {Rect} `{width: {Number}, height: {Number}}`\n\nDefines rectangles that we want to pack in a bin.\n\n### {Box} `{x: {Number}, y: {Number}, width: {Number}, height: {Number}}`\n\nDefines where a rectangle was packed in a bin.\n\n## Bin methods\n\n### var bin = boxpack({Object} options)\n\nCreates a new bin for packing rects into.\n\n### var result = bin.pack({width: 50, height: 100})\n\n`result` will return `false` if there was no room left to pack the `Rect`.\nOtherwise it will return `Box`\n\n## Weighting algorithms\n\n### boxpack.algo.dist\n\nSorts boxes based on their distance from (0, 0)\n\n### boxpack.algo.top\n\nSorts boxes based on their distance from the X-axis\n\n### boxpack.algo.left\n\nSorts boxes based on their distance from the Y-axis\n\n## Helper functions\n\n### boxpack.rectFit({Rect}, {Box}) -> {Boolean}\n### boxpack.boxFit({Box}, {Box}) -> {Boolean}\n### boxpack.intersect({Box}, {Box}) -> {Boolean}\n### boxpack.divideX({Box}, {Number}) -> {Array {Box}}\n### boxpack.divideY({Box}, {Number}) -> {Array {Box}}\n### boxpack.subtract({Box}, {Box}) -> {Array {Box}}\n\n## License\n\nMIT\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/munro/boxpack.git"
  },
  "scripts": {
    "test": "tap test.js"
  },
  "version": "0.1.0"
}
